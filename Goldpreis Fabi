from PyQt6.QtCharts import QChartView, QChart, QLineSeries, QDateTimeAxis, QValueAxis
from PyQt6.QtCore import Qt, QDateTime

class CentralWidget(QChartView):
    """
    Dieses Widget zeigt die Goldpreisentwicklung in Euro und Dollar über einen bestimmten Zeitraum.
    Es verwendet ein Liniendiagramm mit zwei Wertachsen (Euro und Dollar) und einer Zeitachse (Datum).
    """

    def __init__(self, parent=None):
        super(CentralWidget, self).__init__(parent)

        # Erstellen der Serie für die Goldpreise in Euro
        series_euro = QLineSeries()
        series_euro.setName("Goldpreisentwicklung in €")  # Name für die Legende

        # Hinzufügen der Datenpunkte (Datum, Preis in Euro)
        series_euro.append(QDateTime.fromString("2021-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1492.80)
        series_euro.append(QDateTime.fromString("2021-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1590.60)
        series_euro.append(QDateTime.fromString("2022-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1781.90)
        series_euro.append(QDateTime.fromString("2022-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1731.28)
        series_euro.append(QDateTime.fromString("2022-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1690.30)
        series_euro.append(QDateTime.fromString("2022-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1827.45)
        series_euro.append(QDateTime.fromString("2023-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1838.68)
        series_euro.append(QDateTime.fromString("2023-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1763.45)
        series_euro.append(QDateTime.fromString("2023-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1808.75)
        series_euro.append(QDateTime.fromString("2023-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1827.45)
        series_euro.append(QDateTime.fromString("2024-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2004.30)
        series_euro.append(QDateTime.fromString("2024-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2164.99)
        series_euro.append(QDateTime.fromString("2024-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2386.69)

        # Erstellen der Serie für die Goldpreise in Dollar
        series_dollar = QLineSeries()
        series_dollar.setName("Goldpreisentwicklung in $")  # Name für die Legende

        # Hinzufügen der Datenpunkte (Datum, Preis in Dollar)
        series_dollar.append(QDateTime.fromString("2021-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1750.87)
        series_dollar.append(QDateTime.fromString("2021-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1788.48)
        series_dollar.append(QDateTime.fromString("2022-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1945.22)
        series_dollar.append(QDateTime.fromString("2022-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1827.54)
        series_dollar.append(QDateTime.fromString("2022-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1643.65)
        series_dollar.append(QDateTime.fromString("2022-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1750.40)
        series_dollar.append(QDateTime.fromString("2023-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1982.00)
        series_dollar.append(QDateTime.fromString("2023-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1913.73)
        series_dollar.append(QDateTime.fromString("2023-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1928.80)
        series_dollar.append(QDateTime.fromString("2023-11-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2002.39)
        series_dollar.append(QDateTime.fromString("2024-03-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2166.31)
        series_dollar.append(QDateTime.fromString("2024-06-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 1913.73)
        series_dollar.append(QDateTime.fromString("2024-09-26", "yyyy-MM-dd").toMSecsSinceEpoch(), 2658.13)

        # Erstellen der X-Achse (Zeitachse)
        axis_x = QDateTimeAxis()
        axis_x.setTitleText("Datum")  # Beschriftung der Achse
        axis_x.setRange(
            QDateTime.fromString("2021-09-26", "yyyy-MM-dd"),  # Startdatum
            QDateTime.fromString("2024-09-26", "yyyy-MM-dd")   # Enddatum
        )
        axis_x.setFormat("dd.MM.yyyy")  # Datumsformat

        # Erstellen der Y-Achse für Euro-Preise
        axis_euro = QValueAxis()
        axis_euro.setTitleText("Goldpreis in €")  # Beschriftung der Achse
        axis_euro.setRange(1250, 2750)  # Wertebereich

        # Erstellen der Y-Achse für Dollar-Preise
        axis_dollar = QValueAxis()
        axis_dollar.setTitleText("Goldpreis in $")  # Beschriftung der Achse
        axis_dollar.setRange(1250, 2750)  # Wertebereich

        # Erstellen des Charts
        q_chart = QChart()
        q_chart.setTitle("Goldpreisentwicklung")  # Titel des Diagramms

        # Hinzufügen der Achsen zum Diagramm
        q_chart.addAxis(axis_x, Qt.AlignmentFlag.AlignBottom)  # Zeitachse unten
        q_chart.addAxis(axis_euro, Qt.AlignmentFlag.AlignLeft)  # Euro-Achse links
        q_chart.addAxis(axis_dollar, Qt.AlignmentFlag.AlignRight)  # Dollar-Achse rechts

        # Hinzufügen der Serien zum Diagramm
        q_chart.addSeries(series_euro)  # Euro-Preise
        q_chart.addSeries(series_dollar)  # Dollar-Preise

        # Verknüpfung der Euro-Serie mit den Achsen
        series_euro.attachAxis(axis_x)  # Zeitachse
        series_euro.attachAxis(axis_euro)  # Euro-Achse

        # Verknüpfung der Dollar-Serie mit den Achsen
        series_dollar.attachAxis(axis_x)  # Zeitachse
        series_dollar.attachAxis(axis_dollar)  # Dollar-Achse

        # Das Diagramm wird im QChartView angezeigt
        self.setChart(q_chart)
